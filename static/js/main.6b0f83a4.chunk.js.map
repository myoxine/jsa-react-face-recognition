{"version":3,"sources":["views/Home.js","api/face.js","img/test_hadi.jpg","views/ImageInput.js","views/VideoInput.js","App.js","reportWebVitals.js","index.js"],"names":["Home","to","Component","loadModels","a","MODEL_URL","faceapi","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","useTinyModel","img","withFaceLandmarks","withFaceDescriptors","fullDesc","createMatcher","faceProfile","members","Object","keys","labeledDescriptors","map","member","name","descriptors","descriptor","Float32Array","faceMatcher","INIT_STATE","imageURL","testImg","detections","match","ImageInput","props","componentWillMount","JSON_PROFILE","setState","handleImage","state","image","then","fd","detection","findBestMatch","handleFileChange","event","resetState","URL","createObjectURL","target","files","loading","this","drawBox","i","_H","box","height","_W","width","_X","_x","_Y","_y","style","position","border","borderColor","transform","backgroundColor","marginTop","color","_label","_distance","toFixed","id","type","onChange","accept","value","JSON","stringify","src","alt","withRouter","WIDTH","VideoInput","setInputDevice","navigator","mediaDevices","enumerateDevices","devices","filter","device","kind","length","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","React","createRef","clearInterval","videoConstraints","camera","toString","className","display","flexDirection","alignItems","audio","ref","screenshotFormat","App","history","createHistory","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8giJAGqBA,E,4JACnB,WACE,OACE,gCACE,8DACA,6BACE,cAAC,IAAD,CAAMC,GAAG,SAAT,2BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,mC,GATwBC,a,wCCA3B,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DACCC,EAAqC,UADtC,SAECC,IAAkCD,GAFnC,uBAGCC,IAAkCD,GAHnC,uBAICC,IAAiCD,GAJlC,4C,sBAOA,SAAeE,EAAtB,kC,4CAAO,WAAsCC,GAAtC,qCAAAJ,EAAA,6DAA4CK,EAA5C,+BAAwD,IAEzDC,EAAiB,GACfC,EAAS,IAAIL,IAAgC,CACjDG,YACAC,mBAEIE,GAAe,EAPhB,SAUWN,IAAmBE,GAV9B,cAUDK,EAVC,gBAcgBP,IACHO,EAAKF,GACpBG,kBAAkBF,GAClBG,sBAjBE,cAcDC,EAdC,yBAkBEA,GAlBF,4C,wBAsBA,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,mBAAAd,EAAA,6DAEDe,EAAUC,OAAOC,KAAKH,GACtBI,EAAqBH,EAAQI,KAC/B,SAACC,GAAD,OACE,IAAIlB,IACFY,EAAYM,GAAQC,KACpBP,EAAYM,GAAQE,YAAYH,KAC9B,SAACI,GAAD,OAAgB,IAAIC,aAAaD,UAMrCE,EAAc,IAAIvB,IACpBgB,EAhB0B,IACvB,kBAkBEO,GAlBF,4C,sBChCQ,UAA0B,sC,QCYnCC,EAAa,CACjBC,SAAUC,EACVhB,SAAU,KACViB,WAAY,KACZP,YAAa,KACbQ,MAAO,MAGHC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,mBALmB,sBAKE,sBAAAjC,EAAA,sEACbD,IADa,8BAEgBc,EAAcqB,GAF9B,gCAEHT,YAFG,WAEdU,SAFc,0BAGb,EAAKC,YAAY,EAAKC,MAAMV,UAHf,4CALF,EAWnBS,YAXmB,sBAWL,0CAAApC,EAAA,6DAAOsC,EAAP,+BAAe,EAAKD,MAAMV,SAA1B,SACNxB,EAAuBmC,GAAOC,MAAK,SAAC3B,GAClCA,GACJ,EAAKuB,SAAS,CACZvB,WACAiB,WAAYjB,EAASO,KAAI,SAACqB,GAAD,OAAQA,EAAGC,aACpCnB,YAAaV,EAASO,KAAI,SAACqB,GAAD,OAAQA,EAAGjB,mBAN/B,WAWN,EAAKc,MAAMf,cAAiB,EAAKe,MAAMZ,YAXjC,gCAYQ,EAAKY,MAAMf,YAAYH,KAAI,SAACI,GAAD,OAC3C,EAAKc,MAAMZ,YAAYiB,cAAcnB,MAb7B,OAYNO,EAZM,OAeV,EAAKK,SAAS,CAAEL,UAfN,2CAXK,EA8BnBa,iBA9BmB,uCA8BA,WAAOC,GAAP,SAAA5C,EAAA,6DACjB,EAAK6C,aADY,SAEX,EAAKV,SAAS,CAClBR,SAAUmB,IAAIC,gBAAgBH,EAAMI,OAAOC,MAAM,IACjDC,SAAS,IAJM,OAMjB,EAAKd,cANY,2CA9BA,wDAuCnBS,WAAa,WACX,EAAKV,SAAL,eAAmBT,KAtCnB,EAAKW,MAAL,2BAAkBX,GAAlB,IAA8BD,YAAa,OAF1B,E,0CA2CnB,WACE,MAAwC0B,KAAKd,MAArCV,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,MAE1BsB,EAAU,KAwCd,OAvCMvB,IACJuB,EAAUvB,EAAWV,KAAI,SAACsB,EAAWY,GACnC,IAAIC,EAAKb,EAAUc,IAAIC,OACnBC,EAAKhB,EAAUc,IAAIG,MACnBC,EAAKlB,EAAUc,IAAIK,GACnBC,EAAKpB,EAAUc,IAAIO,GACvB,OACE,8BACE,qBACEC,MAAO,CACLC,SAAU,WACVC,OAAQ,QACRC,YAAa,OACbV,OAAQF,EACRI,MAAOD,EACPU,UAAU,aAAD,OAAeR,EAAf,cAAuBE,EAAvB,QAPb,SAUK/B,GAAWA,EAAMuB,GAClB,oBACEU,MAAO,CACLK,gBAAiB,OACjBH,OAAQ,QACRC,YAAa,OACbR,MAAOD,EACPY,UAAW,EACXC,MAAO,OACPH,UAAU,kBAAD,OAAoBb,EAApB,QARb,UAWGxB,EAAMuB,GAAGkB,OAXZ,IAWqBzC,EAAMuB,GAAGmB,UAAUC,QAAQ,MAE9C,QAzBEpB,OAiCd,gCACE,uBACEqB,GAAG,eACHC,KAAK,OACLC,SAAUzB,KAAKR,iBACfkC,OAAO,sBAET,0BAAUC,MAAOC,KAAKC,UAAU7B,KAAKd,MAAMf,eAC3C,sBAAKyC,MAAO,CAAEC,SAAU,YAAxB,UACE,qBAAKD,MAAO,CAAEC,SAAU,YAAxB,SACE,qBAAKiB,IAAKtD,EAAUuD,IAAI,eAEvB9B,GAAoB,e,GApGRtD,aA2GVqF,cAAWpD,G,iBCvHpBqD,EAAQ,IAIRC,E,kDACJ,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,mBAbmB,sBAaE,sBAAAjC,EAAA,sEACbD,IADa,8BAEgBc,EAAcqB,GAF9B,yBAEHT,YAFG,WAEdU,SAFc,gBAGnB,EAAKmD,iBAHc,2CAbF,EAmBnBA,eAAiB,WACfC,UAAUC,aAAaC,mBAAmBlD,KAA1C,uCAA+C,WAAOmD,GAAP,SAAA1F,EAAA,sEACrB0F,EAAQC,QAC9B,SAACC,GAAD,MAA4B,eAAhBA,EAAOC,QAFwB,mBAI7BC,OAAS,GAJoB,gCAKrC,EAAK3D,SAAS,CAClB4D,WAAY,SAN6B,+CASrC,EAAK5D,SAAS,CAClB4D,WAAY,CAAEC,MAAO,iBAVoB,QAa7C,EAAKC,eAbwC,4CAA/C,wDApBiB,EAqCnBA,aAAe,WACb,EAAKC,SAAWC,aAAY,WAC1B,EAAKC,YACJ,OAxCc,EA+CnBA,QA/CmB,sBA+CT,4BAAApG,EAAA,0DACF,EAAKqG,OAAOC,QADV,gCAEAnG,EACJ,EAAKkG,OAAOC,QAAQC,gBArDV,KAuDVhE,MAAK,SAAC3B,GACAA,GACJ,EAAKuB,SAAS,CACZN,WAAYjB,EAASO,KAAI,SAACqB,GAAD,OAAQA,EAAGC,aACpCnB,YAAaV,EAASO,KAAI,SAACqB,GAAD,OAAQA,EAAGjB,mBATrC,WAcA,EAAKc,MAAMf,cAAiB,EAAKe,MAAMZ,YAdvC,gCAec,EAAKY,MAAMf,YAAYH,KAAI,SAACI,GAAD,OAC3C,EAAKc,MAAMZ,YAAYiB,cAAcnB,MAhBnC,OAeAO,EAfA,OAkBJ,EAAKK,SAAS,CAAEL,UAlBZ,2CA7CR,EAAKuE,OAASG,IAAMC,YACpB,EAAKpE,MAAQ,CACXzB,SAAU,KACViB,WAAY,KACZP,YAAa,KACbG,YAAa,KACbK,MAAO,KACPiE,WAAY,MATG,E,wDA2CnB,WACEW,cAAcvD,KAAK+C,Y,oBA0BrB,WACE,MAA0C/C,KAAKd,MAAvCR,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MAAOiE,EAA3B,EAA2BA,WACvBY,EAAmB,KACnBC,EAAS,GACPb,IACJY,EAAmB,CACjBjD,MAAO0B,EACP5B,OAjFO,IAkFPuC,WAAYA,GAGZa,EADiB,SAAfb,EACO,QAEA,QAIb,IAAI3C,EAAU,KAwCd,OAvCMvB,IACJuB,EAAUvB,EAAWV,KAAI,SAACsB,EAAWY,GACnC,IAAIC,EAAKb,EAAUc,IAAIC,OACnBC,EAAKhB,EAAUc,IAAIG,MACnBC,EAAKlB,EAAUc,IAAIK,GACnBC,EAAKpB,EAAUc,IAAIO,GACvB,OACE,8BACE,qBACEC,MAAO,CACLC,SAAU,WACVC,OAAQ,QACRC,YAAa,OACbV,OAAQF,EACRI,MAAOD,EACPU,UAAU,aAAD,OAAeR,EAAf,cAAuBE,EAAvB,QAPb,SAUK/B,GAAWA,EAAMuB,GAClB,mBACEU,MAAO,CACLK,gBAAiB,OACjBH,OAAQ,QACRC,YAAa,OACbR,MAAOD,EACPY,UAAW,EACXC,MAAO,OACPH,UAAU,kBAAD,OAAoBb,EAApB,QARb,SAWGxB,EAAMuB,GAAGwD,aAEV,QAzBExD,OAiCd,sBACEyD,UAAU,SACV/C,MAAO,CACLgD,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,yCAAYL,KACZ,qBACE7C,MAAO,CACLL,MAAO0B,EACP5B,OAhJG,KA6IP,SAME,sBAAKO,MAAO,CAAEC,SAAU,WAAYN,MAAO0B,GAA3C,UACKuB,EACD,qBAAK5C,MAAO,CAAEC,SAAU,YAAxB,SACE,cAAC,IAAD,CACEkD,OAAO,EACPxD,MAAO0B,EACP5B,OAzJH,IA0JG2D,IAAKhE,KAAKkD,OACVe,iBAAiB,aACjBT,iBAAkBA,MAGpB,KACDvD,GAAoB,iB,GA7JVtD,aAqKVqF,cAAWE,GCzKpBgC,E,4JACJ,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,IAAD,CAAQQ,QAASC,MAAjB,SACE,sBAAKT,UAAU,QAAf,UACE,cAAC,IAAD,CAAOd,OAAK,EAACwB,KAAK,IAAIC,UAAW7H,IACjC,cAAC,IAAD,CAAOoG,OAAK,EAACwB,KAAK,SAASC,UAAW1F,IACtC,cAAC,IAAD,CAAOiE,OAAK,EAACwB,KAAK,UAAUC,UAAWpC,e,GARjCvF,aAgBHuH,ICZAK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrF,MAAK,YAAkD,IAA/CsF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6b0f83a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>BNK48 Facial Recognition App</h2>\r\n        <li>\r\n          <Link to=\"/photo\">Photo Input</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/camera\">Video Camera</Link>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as faceapi from \"face-api.js\";\r\n\r\n// Load models and weights\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.5;\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold,\r\n  });\r\n  const useTinyModel = true;\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob);\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors();\r\n  return fullDesc;\r\n}\r\n\r\nconst maxDescriptorDistance = 0.5;\r\nexport async function createMatcher(faceProfile) {\r\n  // Create labeled descriptors of member from profile\r\n  let members = Object.keys(faceProfile);\r\n  let labeledDescriptors = members.map(\r\n    (member) =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        faceProfile[member].name,\r\n        faceProfile[member].descriptors.map(\r\n          (descriptor) => new Float32Array(descriptor)\r\n        )\r\n      )\r\n  );\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  );\r\n  return faceMatcher;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/test_hadi.de5a4e5b.jpg\";","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loadModels, getFullFaceDescription, createMatcher } from \"../api/face\";\r\nimport testImg from \"../img/test_hadi.jpg\";\r\nimport JSON_PROFILE from \"../descriptors/sample8.json\";\r\n// Import image to test API\r\n//const testImg = require('../img/test.jpg');\r\n\r\n// Import face profile\r\n//const  = require();\r\n\r\n// Initial State\r\nconst INIT_STATE = {\r\n  imageURL: testImg,\r\n  fullDesc: null,\r\n  detections: null,\r\n  descriptors: null,\r\n  match: null,\r\n};\r\n\r\nclass ImageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INIT_STATE, faceMatcher: null };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    await this.handleImage(this.state.imageURL);\r\n  };\r\n\r\n  handleImage = async (image = this.state.imageURL) => {\r\n    await getFullFaceDescription(image).then((fullDesc) => {\r\n      if (!!fullDesc) {\r\n        this.setState({\r\n          fullDesc,\r\n          detections: fullDesc.map((fd) => fd.detection),\r\n          descriptors: fullDesc.map((fd) => fd.descriptor),\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      let match = await this.state.descriptors.map((descriptor) =>\r\n        this.state.faceMatcher.findBestMatch(descriptor)\r\n      );\r\n      this.setState({ match });\r\n    }\r\n  };\r\n\r\n  handleFileChange = async (event) => {\r\n    this.resetState();\r\n    await this.setState({\r\n      imageURL: URL.createObjectURL(event.target.files[0]),\r\n      loading: true,\r\n    });\r\n    this.handleImage();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({ ...INIT_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { imageURL, detections, match } = this.state;\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                border: \"solid\",\r\n                borderColor: \"blue\",\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`,\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: \"blue\",\r\n                    border: \"solid\",\r\n                    borderColor: \"blue\",\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: \"#fff\",\r\n                    transform: `translate(-3px,${_H}px)`,\r\n                  }}\r\n                >\r\n                  {match[i]._label} {match[i]._distance.toFixed(2)}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"myFileUpload\"\r\n          type=\"file\"\r\n          onChange={this.handleFileChange}\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />\r\n        <textarea value={JSON.stringify(this.state.descriptors)} />\r\n        <div style={{ position: \"relative\" }}>\r\n          <div style={{ position: \"absolute\" }}>\r\n            <img src={imageURL} alt=\"imageURL\" />\r\n          </div>\r\n          {!!drawBox ? drawBox : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ImageInput);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Webcam from \"react-webcam\";\r\nimport { loadModels, getFullFaceDescription, createMatcher } from \"../api/face\";\r\nimport JSON_PROFILE from \"../descriptors/sample8.json\";\r\n// Import face profile\r\n//const JSON_PROFILE = require();\r\n\r\nconst WIDTH = 840;\r\nconst HEIGHT = 840;\r\nconst inputSize = 160;\r\n\r\nclass VideoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.webcam = React.createRef();\r\n    this.state = {\r\n      fullDesc: null,\r\n      detections: null,\r\n      descriptors: null,\r\n      faceMatcher: null,\r\n      match: null,\r\n      facingMode: null,\r\n    };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    this.setInputDevice();\r\n  };\r\n\r\n  setInputDevice = () => {\r\n    navigator.mediaDevices.enumerateDevices().then(async (devices) => {\r\n      let inputDevice = await devices.filter(\r\n        (device) => device.kind === \"videoinput\"\r\n      );\r\n      if (inputDevice.length < 2) {\r\n        await this.setState({\r\n          facingMode: \"user\",\r\n        });\r\n      } else {\r\n        await this.setState({\r\n          facingMode: { exact: \"environment\" },\r\n        });\r\n      }\r\n      this.startCapture();\r\n    });\r\n  };\r\n\r\n  startCapture = () => {\r\n    this.interval = setInterval(() => {\r\n      this.capture();\r\n    }, 1500);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  capture = async () => {\r\n    if (!!this.webcam.current) {\r\n      await getFullFaceDescription(\r\n        this.webcam.current.getScreenshot(),\r\n        inputSize\r\n      ).then((fullDesc) => {\r\n        if (!!fullDesc) {\r\n          this.setState({\r\n            detections: fullDesc.map((fd) => fd.detection),\r\n            descriptors: fullDesc.map((fd) => fd.descriptor),\r\n          });\r\n        }\r\n      });\r\n\r\n      if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n        let match = await this.state.descriptors.map((descriptor) =>\r\n          this.state.faceMatcher.findBestMatch(descriptor)\r\n        );\r\n        this.setState({ match });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { detections, match, facingMode } = this.state;\r\n    let videoConstraints = null;\r\n    let camera = \"\";\r\n    if (!!facingMode) {\r\n      videoConstraints = {\r\n        width: WIDTH,\r\n        height: HEIGHT,\r\n        facingMode: facingMode,\r\n      };\r\n      if (facingMode === \"user\") {\r\n        camera = \"Front\";\r\n      } else {\r\n        camera = \"Back\";\r\n      }\r\n    }\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                border: \"solid\",\r\n                borderColor: \"blue\",\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`,\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: \"blue\",\r\n                    border: \"solid\",\r\n                    borderColor: \"blue\",\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: \"#fff\",\r\n                    transform: `translate(-3px,${_H}px)`,\r\n                  }}\r\n                >\r\n                  {match[i].toString()}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"Camera\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <p>Camera: {camera}</p>\r\n        <div\r\n          style={{\r\n            width: WIDTH,\r\n            height: HEIGHT,\r\n          }}\r\n        >\r\n          <div style={{ position: \"relative\", width: WIDTH }}>\r\n            {!!videoConstraints ? (\r\n              <div style={{ position: \"absolute\" }}>\r\n                <Webcam\r\n                  audio={false}\r\n                  width={WIDTH}\r\n                  height={HEIGHT}\r\n                  ref={this.webcam}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={videoConstraints}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {!!drawBox ? drawBox : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(VideoInput);\r\n","import React, { Component } from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport './App.css';\n\nimport Home from './views/Home';\nimport ImageInput from './views/ImageInput';\nimport VideoInput from './views/VideoInput';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={createHistory()}>\n          <div className=\"route\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/photo\" component={ImageInput} />\n            <Route exact path=\"/camera\" component={VideoInput} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}